----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date: 09.04.2020 21:39:02
-- Design Name: 
-- Module Name: memory_512x16bits - Behavioral
-- Project Name: 
-- Target Devices: 
-- Tool Versions: 
-- Description: 
-- 
-- Dependencies: 
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
--
----------------------------------------------------------------------------------


library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity memory_512x16bits is
  port (address : in std_logic_vector(15 downto 0);
        write_data : in std_logic_vector(15 downto 0);
        mem_write : in std_logic;
        clock : in std_logic;
        read_data : out std_logic_vector(15 downto 0));
end memory_512x16bits;

architecture Behavioral of memory_512x16bits is
  type mem_array is array(0 to 511) of std_logic_vector(15 downto 0);
  constant gate_delay: Time := 1 ns;
begin
  mem_process: process(address, write_data, clock)
    variable data_mem : mem_array := (
      -- 00
      b"0000000_001_001_111", -- 0 adi r1, r1, #7 ; i = 7
      b"0000000_000_000_001", -- 1 adi r0, r0, #1 ; num = 1
      --                                          ; while (i >= 0) {
      b"0000101_000_000_000", -- 2 add r0, r0, r0 ;   num += num
      b"0001010_001_001_000", -- 3 dec r1, r1     ;   i--
      b"0000111_111_001_101", -- 4 bne -3, r1     ; }
      b"0000010_000_000_000", -- 5 st [r0], r0    ; Mem.halfword[num] = num
      b"0000001_001_000_000", -- 6 ld r1, [r0]    ; num_copy = Mem.halfword[num]
      b"0000011_001_001_000", -- 7 inc r1, r1     ; num_copy++
      b"0000100_001_001_000", -- 8 not r1, r1     ; num_copy ~= num_copy
      --                                          ; while (true) {
      b"0001001_001_000_001", -- 9 sr r1, r1      ;   num_copy >>= num_copy
      b"0000110_111_000_110", -- a b -2           ; }
      x"0000", -- b
      x"0000", -- c
      x"0000", -- d
      x"0000", -- e
      x"0000", -- f
      -- 01
      x"0000", -- 0
      x"0000", -- 1
      x"0000", -- 2
      x"0000", -- 3
      x"0000", -- 4
      x"0000", -- 5
      x"0000", -- 6
      x"0000", -- 7
      x"0000", -- 8
      x"0000", -- 9
      x"0000", -- a
      x"0000", -- b
      x"0000", -- c
      x"0000", -- d
      x"0000", -- e
      x"0000", -- f
      -- 02
      x"0000", -- 0
      x"0000", -- 1
      x"0000", -- 2
      x"0000", -- 3
      x"0000", -- 4
      x"0000", -- 5
      x"0000", -- 6
      x"0000", -- 7
      x"0000", -- 8
      x"0000", -- 9
      x"0000", -- a
      x"0000", -- b
      x"0000", -- c
      x"0000", -- d
      x"0000", -- e
      x"0000", -- f
      -- 03
      x"0000", -- 0
      x"0000", -- 1
      x"0000", -- 2
      x"0000", -- 3
      x"0000", -- 4
      x"0000", -- 5
      x"0000", -- 6
      x"0000", -- 7
      x"0000", -- 8
      x"0000", -- 9
      x"0000", -- a
      x"0000", -- b
      x"0000", -- c
      x"0000", -- d
      x"0000", -- e
      x"0000", -- f
      -- 04
      x"0000", -- 0
      x"0000", -- 1
      x"0000", -- 2
      x"0000", -- 3
      x"0000", -- 4
      x"0000", -- 5
      x"0000", -- 6
      x"0000", -- 7
      x"0000", -- 8
      x"0000", -- 9
      x"0000", -- a
      x"0000", -- b
      x"0000", -- c
      x"0000", -- d
      x"0000", -- e
      x"0000", -- f
      -- 05
      x"0000", -- 0
      x"0000", -- 1
      x"0000", -- 2
      x"0000", -- 3
      x"0000", -- 4
      x"0000", -- 5
      x"0000", -- 6
      x"0000", -- 7
      x"0000", -- 8
      x"0000", -- 9
      x"0000", -- a
      x"0000", -- b
      x"0000", -- c
      x"0000", -- d
      x"0000", -- e
      x"0000", -- f
      -- 06
      x"0000", -- 0
      x"0000", -- 1
      x"0000", -- 2
      x"0000", -- 3
      x"0000", -- 4
      x"0000", -- 5
      x"0000", -- 6
      x"0000", -- 7
      x"0000", -- 8
      x"0000", -- 9
      x"0000", -- a
      x"0000", -- b
      x"0000", -- c
      x"0000", -- d
      x"0000", -- e
      x"0000", -- f
      -- 07
      x"0000", -- 0
      x"0000", -- 1
      x"0000", -- 2
      x"0000", -- 3
      x"0000", -- 4
      x"0000", -- 5
      x"0000", -- 6
      x"0000", -- 7
      x"0000", -- 8
      x"0000", -- 9
      x"0000", -- a
      x"0000", -- b
      x"0000", -- c
      x"0000", -- d
      x"0000", -- e
      x"0000", -- f
      -- 08
      x"0000", -- 0
      x"0000", -- 1
      x"0000", -- 2
      x"0000", -- 3
      x"0000", -- 4
      x"0000", -- 5
      x"0000", -- 6
      x"0000", -- 7
      x"0000", -- 8
      x"0000", -- 9
      x"0000", -- a
      x"0000", -- b
      x"0000", -- c
      x"0000", -- d
      x"0000", -- e
      x"0000", -- f
      -- 09
      x"0000", -- 0
      x"0000", -- 1
      x"0000", -- 2
      x"0000", -- 3
      x"0000", -- 4
      x"0000", -- 5
      x"0000", -- 6
      x"0000", -- 7
      x"0000", -- 8
      x"0000", -- 9
      x"0000", -- a
      x"0000", -- b
      x"0000", -- c
      x"0000", -- d
      x"0000", -- e
      x"0000", -- f
      -- 0a
      x"0000", -- 0
      x"0000", -- 1
      x"0000", -- 2
      x"0000", -- 3
      x"0000", -- 4
      x"0000", -- 5
      x"0000", -- 6
      x"0000", -- 7
      x"0000", -- 8
      x"0000", -- 9
      x"0000", -- a
      x"0000", -- b
      x"0000", -- c
      x"0000", -- d
      x"0000", -- e
      x"0000", -- f
      -- 0b
      x"0000", -- 0
      x"0000", -- 1
      x"0000", -- 2
      x"0000", -- 3
      x"0000", -- 4
      x"0000", -- 5
      x"0000", -- 6
      x"0000", -- 7
      x"0000", -- 8
      x"0000", -- 9
      x"0000", -- a
      x"0000", -- b
      x"0000", -- c
      x"0000", -- d
      x"0000", -- e
      x"0000", -- f
      -- 0c
      x"0000", -- 0
      x"0000", -- 1
      x"0000", -- 2
      x"0000", -- 3
      x"0000", -- 4
      x"0000", -- 5
      x"0000", -- 6
      x"0000", -- 7
      x"0000", -- 8
      x"0000", -- 9
      x"0000", -- a
      x"0000", -- b
      x"0000", -- c
      x"0000", -- d
      x"0000", -- e
      x"0000", -- f
      -- 0d
      x"0000", -- 0
      x"0000", -- 1
      x"0000", -- 2
      x"0000", -- 3
      x"0000", -- 4
      x"0000", -- 5
      x"0000", -- 6
      x"0000", -- 7
      x"0000", -- 8
      x"0000", -- 9
      x"0000", -- a
      x"0000", -- b
      x"0000", -- c
      x"0000", -- d
      x"0000", -- e
      x"0000", -- f
      -- 0e
      x"0000", -- 0
      x"0000", -- 1
      x"0000", -- 2
      x"0000", -- 3
      x"0000", -- 4
      x"0000", -- 5
      x"0000", -- 6
      x"0000", -- 7
      x"0000", -- 8
      x"0000", -- 9
      x"0000", -- a
      x"0000", -- b
      x"0000", -- c
      x"0000", -- d
      x"0000", -- e
      x"0000", -- f
      -- 0f
      x"0000", -- 0
      x"0000", -- 1
      x"0000", -- 2
      x"0000", -- 3
      x"0000", -- 4
      x"0000", -- 5
      x"0000", -- 6
      x"0000", -- 7
      x"0000", -- 8
      x"0000", -- 9
      x"0000", -- a
      x"0000", -- b
      x"0000", -- c
      x"0000", -- d
      x"0000", -- e
      x"0000", -- f
      -- 10
      x"0000", -- 0
      x"0000", -- 1
      x"0000", -- 2
      x"0000", -- 3
      x"0000", -- 4
      x"0000", -- 5
      x"0000", -- 6
      x"0000", -- 7
      x"0000", -- 8
      x"0000", -- 9
      x"0000", -- a
      x"0000", -- b
      x"0000", -- c
      x"0000", -- d
      x"0000", -- e
      x"0000", -- f
      -- 11
      x"0000", -- 0
      x"0000", -- 1
      x"0000", -- 2
      x"0000", -- 3
      x"0000", -- 4
      x"0000", -- 5
      x"0000", -- 6
      x"0000", -- 7
      x"0000", -- 8
      x"0000", -- 9
      x"0000", -- a
      x"0000", -- b
      x"0000", -- c
      x"0000", -- d
      x"0000", -- e
      x"0000", -- f
      -- 12
      x"0000", -- 0
      x"0000", -- 1
      x"0000", -- 2
      x"0000", -- 3
      x"0000", -- 4
      x"0000", -- 5
      x"0000", -- 6
      x"0000", -- 7
      x"0000", -- 8
      x"0000", -- 9
      x"0000", -- a
      x"0000", -- b
      x"0000", -- c
      x"0000", -- d
      x"0000", -- e
      x"0000", -- f
      -- 13
      x"0000", -- 0
      x"0000", -- 1
      x"0000", -- 2
      x"0000", -- 3
      x"0000", -- 4
      x"0000", -- 5
      x"0000", -- 6
      x"0000", -- 7
      x"0000", -- 8
      x"0000", -- 9
      x"0000", -- a
      x"0000", -- b
      x"0000", -- c
      x"0000", -- d
      x"0000", -- e
      x"0000", -- f
      -- 14
      x"0000", -- 0
      x"0000", -- 1
      x"0000", -- 2
      x"0000", -- 3
      x"0000", -- 4
      x"0000", -- 5
      x"0000", -- 6
      x"0000", -- 7
      x"0000", -- 8
      x"0000", -- 9
      x"0000", -- a
      x"0000", -- b
      x"0000", -- c
      x"0000", -- d
      x"0000", -- e
      x"0000", -- f
      -- 15
      x"0000", -- 0
      x"0000", -- 1
      x"0000", -- 2
      x"0000", -- 3
      x"0000", -- 4
      x"0000", -- 5
      x"0000", -- 6
      x"0000", -- 7
      x"0000", -- 8
      x"0000", -- 9
      x"0000", -- a
      x"0000", -- b
      x"0000", -- c
      x"0000", -- d
      x"0000", -- e
      x"0000", -- f
      -- 16
      x"0000", -- 0
      x"0000", -- 1
      x"0000", -- 2
      x"0000", -- 3
      x"0000", -- 4
      x"0000", -- 5
      x"0000", -- 6
      x"0000", -- 7
      x"0000", -- 8
      x"0000", -- 9
      x"0000", -- a
      x"0000", -- b
      x"0000", -- c
      x"0000", -- d
      x"0000", -- e
      x"0000", -- f
      -- 17
      x"0000", -- 0
      x"0000", -- 1
      x"0000", -- 2
      x"0000", -- 3
      x"0000", -- 4
      x"0000", -- 5
      x"0000", -- 6
      x"0000", -- 7
      x"0000", -- 8
      x"0000", -- 9
      x"0000", -- a
      x"0000", -- b
      x"0000", -- c
      x"0000", -- d
      x"0000", -- e
      x"0000", -- f
      -- 18
      x"0000", -- 0
      x"0000", -- 1
      x"0000", -- 2
      x"0000", -- 3
      x"0000", -- 4
      x"0000", -- 5
      x"0000", -- 6
      x"0000", -- 7
      x"0000", -- 8
      x"0000", -- 9
      x"0000", -- a
      x"0000", -- b
      x"0000", -- c
      x"0000", -- d
      x"0000", -- e
      x"0000", -- f
      -- 19
      x"0000", -- 0
      x"0000", -- 1
      x"0000", -- 2
      x"0000", -- 3
      x"0000", -- 4
      x"0000", -- 5
      x"0000", -- 6
      x"0000", -- 7
      x"0000", -- 8
      x"0000", -- 9
      x"0000", -- a
      x"0000", -- b
      x"0000", -- c
      x"0000", -- d
      x"0000", -- e
      x"0000", -- f
      -- 1a
      x"0000", -- 0
      x"0000", -- 1
      x"0000", -- 2
      x"0000", -- 3
      x"0000", -- 4
      x"0000", -- 5
      x"0000", -- 6
      x"0000", -- 7
      x"0000", -- 8
      x"0000", -- 9
      x"0000", -- a
      x"0000", -- b
      x"0000", -- c
      x"0000", -- d
      x"0000", -- e
      x"0000", -- f
      -- 1b
      x"0000", -- 0
      x"0000", -- 1
      x"0000", -- 2
      x"0000", -- 3
      x"0000", -- 4
      x"0000", -- 5
      x"0000", -- 6
      x"0000", -- 7
      x"0000", -- 8
      x"0000", -- 9
      x"0000", -- a
      x"0000", -- b
      x"0000", -- c
      x"0000", -- d
      x"0000", -- e
      x"0000", -- f
      -- 1c
      x"0000", -- 0
      x"0000", -- 1
      x"0000", -- 2
      x"0000", -- 3
      x"0000", -- 4
      x"0000", -- 5
      x"0000", -- 6
      x"0000", -- 7
      x"0000", -- 8
      x"0000", -- 9
      x"0000", -- a
      x"0000", -- b
      x"0000", -- c
      x"0000", -- d
      x"0000", -- e
      x"0000", -- f
      -- 1d
      x"0000", -- 0
      x"0000", -- 1
      x"0000", -- 2
      x"0000", -- 3
      x"0000", -- 4
      x"0000", -- 5
      x"0000", -- 6
      x"0000", -- 7
      x"0000", -- 8
      x"0000", -- 9
      x"0000", -- a
      x"0000", -- b
      x"0000", -- c
      x"0000", -- d
      x"0000", -- e
      x"0000", -- f
      -- 1e
      x"0000", -- 0
      x"0000", -- 1
      x"0000", -- 2
      x"0000", -- 3
      x"0000", -- 4
      x"0000", -- 5
      x"0000", -- 6
      x"0000", -- 7
      x"0000", -- 8
      x"0000", -- 9
      x"0000", -- a
      x"0000", -- b
      x"0000", -- c
      x"0000", -- d
      x"0000", -- e
      x"0000", -- f
      -- 1f
      x"0000", -- 0
      x"0000", -- 1
      x"0000", -- 2
      x"0000", -- 3
      x"0000", -- 4
      x"0000", -- 5
      x"0000", -- 6
      x"0000", -- 7
      x"0000", -- 8
      x"0000", -- 9
      x"0000", -- a
      x"0000", -- b
      x"0000", -- c
      x"0000", -- d
      x"0000", -- e
      x"0000"  -- f
    );
    variable addr: integer;
  begin
    addr := conv_integer(unsigned(address(8 downto 0)));
    read_data <= data_mem(addr) after gate_delay;
    if (rising_edge(clock)) then
      if mem_write='1' then
        data_mem(addr) := write_data;
      end if;
    end if;
  end process;
end Behavioral;
